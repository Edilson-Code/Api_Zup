VocÃª estÃ¡ fazendo uma API REST que precisarÃ¡ controlar endereÃ§os de usuÃ¡rios!

O primeiro passo deve ser a construÃ§Ã£o de um cadastro de usuÃ¡rios, sendo obrigatÃ³rio dados como: nome, e-mail, CPF e data de nascimento, onde e-mail e CPF devem ser Ãºnicos.

O segundo passo Ã© criar um cadastro de endereÃ§os, sendo obrigatÃ³rio dados mÃ­nimos para cadastro como: logradouro, nÃºmero, complemento, bairro, cidade, estado e CEP, associando este endereÃ§o ao usuÃ¡rio.

O terceiro passo Ã© criar um endpoint que retornarÃ¡ um usuÃ¡rio com a lista de todos seus endereÃ§os cadastrados.

VocÃª deve construir apenas 3 endpoints neste sistema, o cadastro do usuÃ¡rio, o cadastro de endereÃ§os e a listagem dos endereÃ§os de um usuÃ¡rio especÃ­fico.
- Caso os cadastros estejam corretos, Ã© necessÃ¡rio voltar o Status 201, caso haja erros de preenchimento de dados, o Status deve ser 400.
- Caso a busca esteja correta, Ã© necessÃ¡rio voltar o status 200, caso haja erro na busca, retornar o Status adequado e uma mensagem de erro amigÃ¡vel.


Seu desafio:
Dado que vocÃª fosse implementar esse sistema utilizando Java como linguagem e Spring + Hibernate como stacks de tecnologia fundamentais da aplicaÃ§Ã£o: escreva um post de blog explicando de maneira detalhada tudo que vocÃª faria para implementar esse cÃ³digo (pense como se estivesse contando para alguÃ©m que nÃ£o manja de programaÃ§Ã£o) ğŸ¤“


No texto, queremos que vocÃª:

Explique quais as tecnologias do mundo Spring vocÃª usaria;

Conte qual o papel das tecnologias escolhidas e quais benefÃ­cios elas trazem para a implementaÃ§Ã£o do cÃ³digo;

Diga quais classes seriam criadas nesse processo e traga trechos autorais explicando a construÃ§Ã£o de cada classe do cÃ³digo;

Explique as etapas do processo de construÃ§Ã£o do seu cÃ³digo e como faria a implementaÃ§Ã£o do sistema na Web;

Traga trechos de cÃ³digos autorais que justifiquem a implementaÃ§Ã£o de cada tecnologia (nÃ£o precisamos do cÃ³digo inteiro);
Evidencie o funcionamento da API (localmente).

Os itens acima sÃ£o obrigatÃ³rios. Mas nÃ£o se limite! Se quiser escrever mais, fique Ã  vontade. A quantidade mÃ­nima de pÃ¡ginas Ã© 5 (cinco) e nÃ£o existe limite mÃ¡ximo, apenas lembre-se que o seu poder de sÃ­ntese e de ir direto ao ponto estarÃ¡ a seu favor!


Dicas:

NÃ£o precisamos saber como instalar cada ferramenta, queremos saber como vocÃª implementaria o seu cÃ³digo.

Ao justificar as tecnologias, mostre a sua visÃ£o e entendimento de cada uma e nÃ£o conceitos prontos jÃ¡ conhecidos.

Cite as tecnologias que vocÃª utilizaria em seu projeto e porquÃª elas fazem parte do escopo/construÃ§Ã£o do seu cÃ³digo, pois ficaremos de olho nesse ponto.

Suas classes e atributos podem ser em portuguÃªs ou em inglÃªs, nÃ£o se apegue a isso, queremos um bom resultado final.

NÃ£o queremos um manual de programaÃ§Ã£o e sim um post explicando como vocÃª faria a implementaÃ§Ã£o da API passo a passo.

Mais do que respostas certas, queremos ver o quÃ£o nerd vocÃª consegue ser e o que considera relevante. O importante Ã© mostrar que consegue aprender, se fazer entender e ainda transmitir conhecimento.


 

Item bÃ´nus: se ficou fÃ¡cil, te desafiamos a:

Construir a aplicaÃ§Ã£o sem utilizar Lombok;
Desafiamos vocÃª a integrar a API da Viacep usando Spring-Cloud-Feign.